 Django==4.2.8
djangorestframework==3.15.2
psycopg2-binary==2.9.8
channels==4.2.0.
channels_redis==4.0.0.
asyncpg==0.27.0.
docker-compose==2.29.2

# 2. Настройка settings.py для PostgreSQL:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'gymdb',
#         'USER': 'postgres',
#         'PASSWORD': 'password',
#         'HOST': 'db',
#         'PORT': 5432,
#     }
# }

# Настройка авторизации:
# INSTALLED_APPS += [
#     'rest_framework',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]

# MIDDLEWARE += [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# LOGIN_URL = '/auth/login/'
# LOGIN_REDIRECT_URL = '/api/'
# LOGOUT_REDIRECT_URL = '/auth/login/'

# 3. Docker-compose файл для запуска контейнеров (docker-compose.yml):

# version: '3.8'
# services:
#   db:
#     image: postgres:15
#     container_name: gym_db
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: gymdb
#     ports:
#       - "5432:5432"
#   web:
#     build: .
#     container_name: gym_web
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db